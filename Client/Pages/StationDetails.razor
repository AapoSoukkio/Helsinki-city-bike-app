@page "/station/details/{id:int}"
@using Solita.HelsinkiBikeApp.Shared
@inject HttpClient Http
@inject NavigationManager NavigationManager

<PageTitle>Staion details</PageTitle>

@if (null == bikeStation)
{
    <p>Loading station...</p>
}
else
{
    <span>@bikeStation.Adress</span> <span>@bikeStation.Name</span>
    <br />
    
}

@code {

    private BikeStation? bikeStation;
    private MayJourney? mayJourney;
    private JuneJourney? juneJourney;
    private JulyJourney? julyJourney;

    private int? totalStarts = 0;

    [Parameter]
    public int ID { get; set; }
    protected override async Task OnInitializedAsync()
    {
        var stations = await Http.GetFromJsonAsync<BikeStation[]>($"bikestation");
        bikeStation = stations.FirstOrDefault(s => s.ID == ID);

        if (bikeStation != null)
        {
            totalStarts = NumberOfJourneysStarted(bikeStation.ID);
        }

        //station = station.FirstOrDefault(s => s.ID == ID);

    }

    private int NumberOfJourneysStarted(int id)
    {
        int totalStarts = 0;

        totalStarts += 0; //TODO: Get the real numbers from backend as soon as endpoints are ready

        return totalStarts;
    }
}